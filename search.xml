<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>随笔</title>
      <link href="/2021/12/07/sui-bi/"/>
      <url>/2021/12/07/sui-bi/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=569213220&amp;auto=1&amp;height=66"></iframe><br>  <p>也不知道什么时候写作开始变得如此奢侈了，转眼毕业一年已满，没有华丽外壳包裹的本子已经再也无法让我提起动笔的兴趣，所有的思与想无非是大脑一穿而过，带走的是风中的年轻气，留下的是对时光转瞬即逝的麻木与苍凉，更可笑的是连笔都弃置一旁，曾经我最不爱甚至鄙视所谓的高效率打字写作如今却用的正欢。<br></p>  <p>南和楼下大树还是在摇曳，伴着夏日难耐的炎热与风扇整日呜呜呜的轰鸣，可是蓦地一下子，好像电影里焦黄的镜头闪过，一下子就是好多好多年。<br></p>  <p>“高考，无非是很多人做同一份卷子，然后决定去哪一所学校，最终发现，错的每一道题都是为了遇见对的人，而对的每一道题，是为了遇见更好的自己“<br></p>  <p>为了能看到各种颜色的这段话，我甚至跑遍了所有书店买下了所有我上一届的旧版高考必刷题，在我看来，这段文字它从未静止，它的模样说不清道不明，只知道每次读到它的时候，我就懂得，什么叫青春，什么叫高考，什么叫力量。（从我那年高考2020版新版必刷题封面背后就好像没有这段话了，相信这段话当时千千万万的高考学子都见过都看过，也不会忘记，因为这是属于我们年代的记忆，也许多年后的某次聚会上再谈起这段话，那段那么多人怀揣相同梦想的尘封岁月就会再次开启，恰如多年前午日充满阳光下教室里拼搏的那些少年，永远年轻，永远有梦）<br></p>  <p>转眼高考转眼一年，转眼从大一混到大二，我真的有足足一年没有安安静静的像今天一样能好好坐下来，抒心里之所念而非让它只是于心过，再一次用文字记录过往的时候，才发现这种感觉才是大学这一年里一直所寻找的。<br></p>  <p>兜兜转转，又回来了，可能人生往往也是这样。</p>  <p>错的每一道题，也许真的是为了遇见对的人，仅仅一分我就不会来常德来湖南文理来国际学院，认识身边的这些人儿，他们有人如繁星有人如烟火，尚未成熟的我可能并没有太多的技巧能在人群里留下很好的印象，但是我最后想来这就是生活，总有遗憾总有后悔，如果说有平行世界，平行世界的那个我，我们拥有一样的童年一样的环境一样的思维，可是我相信我们是不一样的，可能某个瞬间他勇敢了他努力了他坚持了，以后的我们都不会一样，但是一切的一切既然发生，就不要遗憾，来文理也许是个错误，也许是个美丽的错误，在这里我认识了帮助我好多好多的老师，认识我身边的好朋友好兄弟，同样也认识了我曾经一度以为能一路一起走下去至少是可以一起考研的人，我有开心也有难过也有思考，曾几何时我多么多么想回去高中回去邵阳回去以前，我好后悔那时候我居然那么想高考那么想读大学，一年我经历了太多太多，我终于发现原来以前所谓的厌倦的一切是那么的好那么的幸福，我很遗憾直到离开家才领悟了这些，可是人生就是有遗憾，还好18岁的自己知道了这些，我相信19岁的我就不会再留下这方面的遗憾了。<br>  </p><p>前几天也就是六月出头的三天，我终于亲眼见到了大学的跳蚤市场。<br></p>  <p>记得我第一次听到这个词，是在江南的《此间的少年》里，那年我初二。是的我记得很清楚。最有趣的是一个初二的小朋友看一个成年作家回忆燕园的大学四年青春居然还会感慨青春的流逝而且遗憾似乎自己也没有抓住青春，可是那时候他的青春，貌似还是含苞待放吧。桥段里乔峰在逛跳蚤市场，他认识了以后会影响他大学四年的学姐康敏，他买下了学姐的所有的书，骑着三轮夕阳下满载的背影，我至今还能想象那幅画面，以及他后来在学姐的英语书里看到的写了“折柳“两个字的便利贴，一下子悲从中来，那股遗憾就好像地下涌动的暗泉，突然的迸发让心灵就好像在酸中沁润。<br></p>  <p>第一次看到这么多人的由大学生组成的市场，原来离我们那么那么远的摆摊一下子突然这么这么近，我第一次看到大家为了占好位置再本来六点才开始的市场提前了近两个小时就提着铺地的凉席和装东西的行李箱来占位置，甚至有些寝室为了讨论什么时候出摊还特意争论一番，很有幸我也在市场上认识了一些朋友，我忘记不了那个用跳楼价40块卖给我一个全新的李宁篮球的学姐，她似乎很开心因为她是用价值二十元的相机换来的篮球在她看来她还赚了20块，我一样忘记不了卖给我设计类书的学长，那已经是市场的最后一个晚上了，他们说，嗨，好东西早就在第一天了，明年可要记得早点来，马上我身旁的一个学长朋友说，嗨，明年可就到我摆摊了，对面那个学长说，那明年可别把好东西都第一天带来。<br></p>  <p>哈哈哈。<br></p>  <p>多么平淡的话。<br></p>  <p>我听起来真的很不是滋味，后来跟着那四个学长回寝，在漆黑的篮球场边他们拖着行李箱走过，其中的好几个都慢下来看着最后还坚持在摸黑打球的两个伙伴。这可能是他们四年里最后一次看打球了吧，我不知道他们的火车什么时候带他们开离这里，也不知道他们是否同样也热爱篮球也曾在这里挥洒青春与汗水，我只知道当他们说出这些话做出这些动作的时候，就已经知道，虽然跳蚤市场明年还有，同样的东西可能还会出现，打球的人也从未缺少过，但是他们的大学他们的青春，是不可能再回来了。<br></p>  <p>有一个学姐因为专业作业拍摄了关于跳蚤市场的纪录片，很遗憾因为各种原因没能成为采访者之一也用影像记录下青春的痕迹，但是我现在用文字写下这一切的时候，也不迟。为期三天的跳蚤市场，我看到了太多太多的学长学姐以近乎白送的价格卖出了自己的物品，也许那些书还一字未动，也许那些设备真的仅仅是开封，但是他们也互相陪伴了n个小时，那些物件也曾经在他们的青春里出现，哪怕只是一闪而过，那些书虽然没有字但是他们同样写满了东西，叫做回不去的，青春。也许跳蚤市场的初心并不是所谓让学长学姐能在毕业前夕用自己的曾经拥有过的东西小赚一笔，也许摊前你争我喊的交互并不是为了多赚几块或者少花几块，我相信这一切的一切，只是有一个名为岁月的东西在作祟，买下东西的人呐，也买下了学长学姐的四年青春，同样相信卖出收款的那一刹那，学长学姐心里也会咯噔一下，也许还记得那本书的封面的某个磕碰是什么时候在哪里为什么怎么出现的，但是以后可能会再也记不起来了吧。嗨，交易青春，多么有意思的感觉。这时候我才突然觉得我身在大学，周围的所有人还都是学生，他们淳朴善良，在高楼林立霓虹闪耀的地段你永远都找不到想他们这样纯真的人，也许他们因为四年前的高考失利来到这里，也许他们曾自命不凡看不起这所学校，但现在的这个时刻，他们以近乎废纸的价格出售他们四年的青春的时候，相信他们一定很爱这个地方。<br></p>  <p>文理学院从来不是什么名校，没有985211的关环，也没有全国聚光灯的璀璨，学生们也从来都不是尖子，他们也许一路平庸，按部就班经过努力考上这里进入学生时代的最后一个阶段，他们大多来自平凡的家庭，也许以后会继续平凡下去，可是，他们都很真实，你看看那些摊位上学长学姐的脸，我想请问你走出这里还能用一块钱买到三本书甚至是白送你需要就可以拿走？在群星璀璨聚光灯环绕的地方，再也无法发现这最简单的真诚，我相信他们每一个人都不会忘记这里，因为不管怎么样，他们的四年都留在这片土地上来了，留在跳蚤市场的喊价声里，留在白马湖的倒影里。<br></p>  <p>因为一旦离开，就真的再也回不去了。<br></p>                        于2021 年 6 月 7 日 晚 1 点 34 分]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加豆瓣读书</title>
      <link href="/2021/11/30/tian-jia-dou-ban-du-shu/"/>
      <url>/2021/11/30/tian-jia-dou-ban-du-shu/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=386717&amp;auto=1&amp;height=66"></iframe><br><h1 id="豆瓣书单电影界面"><a href="#豆瓣书单电影界面" class="headerlink" title="豆瓣书单电影界面"></a>豆瓣书单电影界面</h1><p>**注意：首先需要检查你的hexo版本是多少，在你的博客目录下执行命令 hexo -v即可，这个豆瓣插件需要的版本需要&lt;4.2.0，否则会出现bug，比如点击书单的在读，想读或者已读会出现一个新的弹出页面，解决办法就是降低hexo的版本，先卸载目前的hexo版本，再安装4.0.0版本的hexo即可，我的版本为4.0.0。**<br>在hexo 博客个性化定制中，加入豆瓣读书界面可要为博客主页添光加彩<br><br>点击链接查看效果: <a href="https://csy666lalala.github.io/">安清衍的博客</a> </p><p><strong>温馨提示：文末有部署三部曲，可复制</strong></p><p><strong>以下展示两种方法：（本质一样）</strong></p><h1 id="第一种："><a href="#第一种：" class="headerlink" title="第一种："></a>第一种：</h1><h3 id="第一步：检查hexo版本"><a href="#第一步：检查hexo版本" class="headerlink" title="第一步：检查hexo版本"></a>第一步：检查hexo版本</h3><p>在电脑左下角搜索栏（若关闭搜索栏可以使用<strong>win键+s键</strong>打开搜索框）输入git bash，<strong>右键</strong>点击选择以管理员身份运行<br><br>Eg：<img src="https://bu.dusays.com/2021/12/21/adb6c84806a18.png" alt="图片不见啦"><br>我的目录在<strong>g:\blog2</strong>我就输入cd g:\blog2（以<strong>英文方式</strong>输入且cd后有<strong>空格</strong>）<br><br><strong>很重要！！！否则会存到默认位置就是c盘，导致电脑变卡</strong><br></p><p>输入以下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> uninstall hexo$  <span class="token function">npm</span> <span class="token function">install</span> hexo@4.0.0 -g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="第二步：在博客站点目录执行命令安装豆瓣插件"><a href="#第二步：在博客站点目录执行命令安装豆瓣插件" class="headerlink" title="第二步：在博客站点目录执行命令安装豆瓣插件"></a>第二步：在博客站点目录执行命令安装豆瓣插件<br></h3><p>同第一步以管理员身法运行gitbash（很重要！！！不然很可能报错）<br><br>Cd到你的博客目录 <br><br>例如我的目录在g:\blog2  我就输入cd g:\blog2（以英文方式输入且cd后有空格）<br><br><strong>很重要！！！否则会存到默认位置就是c盘，导致电脑变卡</strong><br></p><p>安装插件：<br><br>​</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> hexo-douban --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="第三步：紧接着在博客站点目录的配置文件-config-yml下，添加如下配置"><a href="#第三步：紧接着在博客站点目录的配置文件-config-yml下，添加如下配置" class="headerlink" title="第三步：紧接着在博客站点目录的配置文件_config.yml下，添加如下配置"></a>第三步：紧接着在博客站点目录的配置文件_config.yml下，添加如下配置</h3><p>​</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ douban: $   user: <span class="token number">252345665</span>    <span class="token comment">#这个需要修改为你个人的id  </span>$   builtin: <span class="token boolean">false</span>   <span class="token comment">#如果想生成豆瓣页面，这个需要设置为true</span>$  book:$  title: <span class="token string">'This is my book title'</span> $   quote: <span class="token string">'This is my book quote'</span>$  movie: $  title: <span class="token string">'This is my movie title'</span> $  quote: <span class="token string">'This is my movie quote'</span> $  game: $  title: <span class="token string">'This is my game title'</span> $  quote: <span class="token string">'This is my game quote'</span> $  timeout: <span class="token number">10000</span> ​``<span class="token variable"><span class="token variable">`</span> <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>user:：你的豆瓣ID。打开豆瓣，登入账户，然后在右上角点击 ”个人主页“，这时候地址栏的URL大概是这样：https://www.douban.com/people/xxxxxx/ ，其中的”xxxxxx”就是你的个人ID了。builtin：是否将生成页面的功能嵌入 hexo s 和 hexo g 中，默认是 <span class="token boolean">false</span> ，另一可选项为 <span class="token boolean">true</span> 。title： 该页面的标题。quote： 写在页面开头的一段话,支持html语法。timeout： 爬取数据的超时时间，默认是 10000ms，如果在使用时发现报了超时的错<span class="token punctuation">(</span>ETIMEOUT<span class="token punctuation">)</span>可以把这个数据设置的大一点。如果只想显示某一个页面<span class="token punctuation">(</span>比如movie<span class="token punctuation">)</span>，那就把其他的配置项注释掉即可。<span class="token operator">&lt;</span>/p<span class="token operator">&gt;</span><span class="token comment">## 第四步：然后再主题配置文件_config.yml中添加关于此页面的菜单：(下面是我的配置)</span>​<span class="token variable">`</span></span>`<span class="token variable"><span class="token variable">`</span> <span class="token function">bash</span>$ menu: $       url: / $       icon: fas fa-list $       children: $     - name: 电影  $           url: /movies $           icon: fas fa-film $         - name: 书单 $           url: /books $           icon: fas fa-book $         - name: 游戏 $           url: /games $           icon: fas fa-gamepad ​<span class="token variable">`</span></span>`<span class="token variable"><span class="token variable">`</span> **注意：相当于在配置文件最上面的菜单栏里添加新栏目，不要多打一个menu！！！否则会报错 **<span class="token operator">&lt;</span>img <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"https://bu.dusays.com/2021/12/21/adb6c84806a18.png"</span> <span class="token assign-left variable">alt</span><span class="token operator">=</span>“图片不见啦” /<span class="token operator">&gt;</span> <span class="token comment">## 第五步：适配Matery主题：在 /themes/hexo-theme-matery/layout 文件夹下面创建一个名为 douban.ejs 的文件，并将下面的内容复制进去：</span>​<span class="token variable">`</span></span>`<span class="token variable"><span class="token variable">`</span> <span class="token function">bash</span>$ <span class="token operator">&lt;</span>%- partial<span class="token punctuation">(</span><span class="token string">'_partial/post-cover'</span><span class="token punctuation">)</span> %<span class="token operator">&gt;</span> $  <span class="token operator">&lt;</span>style<span class="token operator">&gt;</span>  $    .hexo-douban-picture img <span class="token punctuation">{</span>       $        width: <span class="token number">100</span>%<span class="token punctuation">;</span>  $    <span class="token punctuation">}</span>  $ <span class="token operator">&lt;</span>/style<span class="token operator">&gt;</span>$<span class="token operator">&lt;</span>main <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"content"</span><span class="token operator">&gt;</span> $    <span class="token operator">&lt;</span>div <span class="token assign-left variable">id</span><span class="token operator">=</span><span class="token string">"contact"</span> <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"container chip-container"</span><span class="token operator">&gt;</span> $        <span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"card"</span><span class="token operator">&gt;</span> $            <span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"card-content"</span> <span class="token assign-left variable">style</span><span class="token operator">=</span><span class="token string">"padding: 30px"</span><span class="token operator">&gt;</span> $                <span class="token operator">&lt;</span>h1 <span class="token assign-left variable">style</span><span class="token operator">=</span><span class="token string">"margin: 10px 0 10px 0px;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>%<span class="token operator">=</span> page.title %<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> $                <span class="token operator">&lt;</span>%- page.content %<span class="token operator">&gt;</span> $            <span class="token operator">&lt;</span>/div<span class="token operator">&gt;</span> $        <span class="token operator">&lt;</span>/div<span class="token operator">&gt;</span> $        <span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"card"</span><span class="token operator">&gt;</span> $            <span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"card-content"</span> <span class="token assign-left variable">style</span><span class="token operator">=</span><span class="token string">"text-align: center"</span><span class="token operator">&gt;</span> $                <span class="token operator">&lt;</span>h3 <span class="token assign-left variable">style</span><span class="token operator">=</span><span class="token string">"margin: 5px 0 5px 5px;"</span><span class="token operator">&gt;</span>如果你有好的内容推荐，欢迎在下面留言！<span class="token operator">&lt;</span>/h<span class="token operator"><span class="token file-descriptor important">3</span>&gt;</span>  $            <span class="token operator">&lt;</span>/div<span class="token operator">&gt;</span> $        <span class="token operator">&lt;</span>/div<span class="token operator">&gt;</span> $        <span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"card"</span><span class="token operator">&gt;</span> $            <span class="token operator">&lt;</span>% <span class="token keyword">if</span> <span class="token punctuation">(</span>theme.gitalk <span class="token operator">&amp;&amp;</span> theme.gitalk.enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> %<span class="token operator">&gt;</span> $            <span class="token operator">&lt;</span>%- partial<span class="token punctuation">(</span><span class="token string">'_partial/gitalk'</span><span class="token punctuation">)</span> %<span class="token operator">&gt;</span> $            <span class="token operator">&lt;</span>% <span class="token punctuation">}</span> %<span class="token operator">&gt;</span>  $            <span class="token operator">&lt;</span>% <span class="token keyword">if</span> <span class="token punctuation">(</span>theme.gitment.enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> %<span class="token operator">&gt;</span>  $            <span class="token operator">&lt;</span>%- partial<span class="token punctuation">(</span><span class="token string">'_partial/gitment'</span><span class="token punctuation">)</span> %<span class="token operator">&gt;</span> $            <span class="token operator">&lt;</span>% <span class="token punctuation">}</span> %<span class="token operator">&gt;</span>  $            <span class="token operator">&lt;</span>% <span class="token keyword">if</span> <span class="token punctuation">(</span>theme.disqus.enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> %<span class="token operator">&gt;</span>  $            <span class="token operator">&lt;</span>%- partial<span class="token punctuation">(</span><span class="token string">'_partial/disqus'</span><span class="token punctuation">)</span> %<span class="token operator">&gt;</span> $            <span class="token operator">&lt;</span>% <span class="token punctuation">}</span> %<span class="token operator">&gt;</span> $            <span class="token operator">&lt;</span>% <span class="token keyword">if</span> <span class="token punctuation">(</span>theme.livere <span class="token operator">&amp;&amp;</span> theme.livere.enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> %<span class="token operator">&gt;</span> $            <span class="token operator">&lt;</span>%- partial<span class="token punctuation">(</span><span class="token string">'_partial/livere'</span><span class="token punctuation">)</span> %<span class="token operator">&gt;</span> $            <span class="token operator">&lt;</span>% <span class="token punctuation">}</span> %<span class="token operator">&gt;</span> $            <span class="token operator">&lt;</span>% <span class="token keyword">if</span> <span class="token punctuation">(</span>theme.valine <span class="token operator">&amp;&amp;</span> theme.valine.enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> %<span class="token operator">&gt;</span> $            <span class="token operator">&lt;</span>%- partial<span class="token punctuation">(</span><span class="token string">'_partial/valine'</span><span class="token punctuation">)</span> %<span class="token operator">&gt;</span> $            <span class="token operator">&lt;</span>% <span class="token punctuation">}</span> %<span class="token operator">&gt;</span> $        <span class="token operator">&lt;</span>/div<span class="token operator">&gt;</span> $    <span class="token operator">&lt;</span>/div<span class="token operator">&gt;</span> $<span class="token operator">&lt;</span>/main<span class="token operator">&gt;</span>​<span class="token variable">`</span></span>`<span class="token variable"><span class="token variable">`</span> <span class="token comment">## 第六步：然后在博客站点目录下的node_modules文件夹下找到hexo-douban/lib，文件夹下有三个js文件，分别为：books-generator.js 、games-generator.js 、movies-generator.js，用文本编辑器打开这三个文件，并将其文件内容末尾的代码修改为一下内容：</span>​<span class="token variable">`</span></span>`<span class="token variable"><span class="token variable">`</span> <span class="token function">bash</span>/* 原文件内容为 layout: <span class="token punctuation">[</span><span class="token variable">`</span></span>page<span class="token variable"><span class="token variable">`</span>, <span class="token variable">`</span></span>post<span class="token variable"><span class="token variable">`</span><span class="token punctuation">]</span> ，将其修改为下面的内容*/layout: <span class="token punctuation">[</span><span class="token variable">`</span></span>page<span class="token variable"><span class="token variable">`</span>, <span class="token variable">`</span></span>douban<span class="token variable"><span class="token variable">`</span><span class="token punctuation">]</span>​<span class="token variable">`</span></span>`<span class="token variable"><span class="token variable">`</span> <span class="token comment">##第七步：最后就是使用并生成相应的页面，执行命令如下</span>​<span class="token variable">`</span></span>`` <span class="token function">bash</span>$ hexo douban​ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>需要注意的是，通常大家都喜欢用 hexo d 来作为 hexo deploy 命令的简化，但是当安装了 hexo douban 之后，就不能用 hexo d 了，因为 hexo douban 跟 hexo deploy 的前缀都是 hexo d ，你以后执行的 hexo d 将不再是 Hexo 页面的生成，而是豆瓣页面的生成。</strong></p><p>以下是可选的命令参数：<br>​</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">-h, --help    <span class="token comment"># 帮助页面</span>-b, --books   <span class="token comment"># 只生成书单页面</span>-g, --games   <span class="token comment"># 只生成游戏页面</span>-m, --movies  <span class="token comment"># 只生成电影页面</span>​``<span class="token variable"><span class="token variable">`</span>当站点配置文件的builtin的值为true时，生成页面的功能会嵌入到hexo g和hexo s中，在进行部署生成操作，会自动生成相应的页面。<span class="token comment"># 第二种：</span><span class="token comment">##    第一步：安装模块依赖</span>我们使用时可以先安装依赖模块，在GitBash（在搜索栏中搜索后**以管理员身法运行**）中使用以下命令：<span class="token variable">`</span></span>`` <span class="token function">bash</span>$ <span class="token function">npm</span> <span class="token function">install</span> hexo-douban –save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第二步：站点配置文件中添加配置"><a href="#第二步：站点配置文件中添加配置" class="headerlink" title="第二步：站点配置文件中添加配置"></a>第二步：站点配置文件中添加配置</h2><p>然后我们再在Hexo<strong>站点根目录配置文件_config.xml</strong>中的末尾添加如下配置：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">douban:  user: mythsman  builtin: <span class="token boolean">false</span>  book:    title: <span class="token string">'This is my book title'</span>    quote: <span class="token string">'This is my book quote'</span>  movie:    title: <span class="token string">'This is my movie title'</span>    quote: <span class="token string">'This is my movie quote'</span>  game:    title: <span class="token string">'This is my game title'</span>    quote: <span class="token string">'This is my game quote'</span>  timeout: <span class="token number">10000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面参数说明：<br></p><p>    user: 你的豆瓣ID.打开豆瓣，登入账户，然后在右上角点击 “个人主页” ，这时候地址栏的URL大概是这样：“<a href="https://www.douban.com/people/xxxxxx/%E2%80%9D">https://www.douban.com/people/xxxxxx/”</a> ，其中的”xxxxxx”就是你的个人ID了。<br>    builtin: 是否将生成页面的功能嵌入hexo s和hexo g中，默认是false,另一可选项为true(1.x.x版本新增配置项)。<br>    title: 该页面的标题.<br>    quote: 写在页面开头的一段话,支持html语法.<br>    timeout: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。<br><br> 由于hexo-douban 是默认抓取豆瓣读书、豆瓣电影以及豆瓣游戏的，如果只想要其中一部分，可以把其它部分在上述配置文件中去掉即可。</p><p></p><h2 id="第三步：启动"><a href="#第三步：启动" class="headerlink" title="第三步：启动"></a>第三步：启动</h2><p>那么我们如何去使用这个呢？</p><p>我们只需要在GitBash中输入以下命令：hexo clean &amp;&amp; hexo douban -bgm &amp;&amp; hexo g &amp;&amp; hexo s即可，注意其中开启hexo-douban的命令中，-bgm代表的是book、game、movie三个参数，如果只需要其中的一部分就只带你想要的那些参数。</p><p>另外注意的是，由于hexo douban的简写也是hexo d，与hexo deploy的简写指令hexo d冲突，因此在进行二者部署的时候，只能都打全名而不能打简写形式。</p><p></p><h2 id="第四步：测试"><a href="#第四步：测试" class="headerlink" title="第四步：测试"></a>第四步：测试</h2><p>上面都没问题之后，我们只需要在站点目录下测试http://localhost:4000/books 或者 http://localhost:4000/movies 等，如果看到页面了就说明成功了。</p><h2 id="第五步：部署"><a href="#第五步：部署" class="headerlink" title="第五步：部署"></a>第五步：部署</h2><p>如果上述都没有问题，我们就可以在菜单栏中添加按钮了，打开主题配置文件_config.xml，找到菜单按钮，可以选择性的添加下面内容：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$menu</span><span class="token builtin class-name">:</span>$  home: /archives: /archives$  books: /books     <span class="token comment"># 这是链接到books页面</span>$  movies: /movies   <span class="token comment">#  这是链接到movies页面</span>$  games: /games   <span class="token comment"># 这是链接到games页面</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意添加完成之后按钮并不是中文的，这是由于在languages文件夹下面的zh-CN（中文语言配置文件）没有添加上述对应的中文参数信息，所以我们需要主动添加。</p><p>语言文件夹在你的主题配置文件夹下面，比如我的是使用的next主题，则是在E:\blog\hexo\themes\next\languages目录下，找到zh-CN文件，在menu菜单下添加：</p><p></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">menu:  books: 阅读  movies: 电影  games: 游戏<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>即可完成中文化自定义菜单。</p><h1 id="博客的豆瓣页面就做好啦"><a href="#博客的豆瓣页面就做好啦" class="headerlink" title="博客的豆瓣页面就做好啦"></a>博客的豆瓣页面就做好啦</h1><p>温馨实现：以下是部署三部曲：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo cl<span class="token operator">&amp;&amp;</span>hexo douban -bgm<span class="token operator">&amp;&amp;</span>hexo g<span class="token operator">&amp;&amp;</span>hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果对你有用就评论一下让作者知道叭（当然赞赏也可_&gt;）</p>]]></content>
      
      
      <categories>
          
          <category> hexo主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matery主题美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>尝试写的第一篇博客</title>
      <link href="/2021/11/14/chang-shi-xie-de-di-yi-pian-bo-ke/"/>
      <url>/2021/11/14/chang-shi-xie-de-di-yi-pian-bo-ke/</url>
      
        <content type="html"><![CDATA[<p>经过一个多星期的不懈努力终于成功啦，此刻真是开心开心开心开心哈哈哈哈哈哈哈哈哈哈哈，慢慢摸索相信ta可以越来越好看！！</p><p><em>这次加入了一个动漫人物呀</em></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>欢迎浏览我的第一个博客！！！撒花！！</title>
      <link href="/2021/11/10/article-title/"/>
      <url>/2021/11/10/article-title/</url>
      
        <content type="html"><![CDATA[<p>时间不太对啊，应该是2021年23点04分才真正成功上传网址，其过程只能说一波很多很多折吧，如果你也想拥有自己的个人博客就私信滴滴我或者在博客下留言，再次谢谢大家的浏览呀</p>]]></content>
      
      
      <categories>
          
          <category> 简介 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人简介 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/11/09/hello-world/"/>
      <url>/2021/11/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
